<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../bdml/BdmlHtml.xsl"?>

<!--
  - Balau core C++ library
  -
  - Copyright (C) 2008 Bora Software (contact@borasoftware.com)
  -
  - Licensed under the Boost Software License - Version 1.0 - August 17th, 2003.
  - See the LICENSE file for the full license text.
  -
  -->

<document xmlns="http://boradoc.org/1.0">
	<metadata>
		<relative-root url=".." />
		<header url="../common/header.bdml" target="html" />
		<footer url="../common/footer.bdml" target="html" />
		<stylesheet url="../resources/css/balau.css" target="html" />
		<link rel="icon" type="image/png" href="../resources/images/BoraLogoC300-OS.png" />
		<copyright>Copyright (C) 2008 Bora Software (contact@borasoftware.com)</copyright>

		<title text="Balau core C++ library - release history" />
		<toc start="1" />

		<script src="../bdml/js/Comments.js" type="text/javascript" />
		<script src="../bdml/js/SyntaxHighlighter.js" type="text/javascript" />
		<script src="../bdml/js/CppHighlighterDefinition.js" type="text/javascript" />
		<script src="../bdml/js/VerbatimHighlighterDefinition.js" type="text/javascript" />
		<script src="../bdml/js/MenuHider.js" type="text/javascript" />
	</metadata>

	<chapter title="Release history">
		<para>Balau uses a continuous integration methodology, with a Jenkins build running on Bora's servers. Use of the head of the master branch should thus provide a stable library. Release tags are also created periodically in order to provide reference versions to link against.</para>

		<h1>V2021.6.1</h1>

		<para><emph>Draft release notes</emph></para>

		<h2>New features</h2>

		<bullets>
			<entry>Split library into core, logging, network, and testing.</entry>
			<entry>Core library is header only.</entry>
			<entry>Simplify resource class files.</entry>
			<entry>Use HttpLib instead of Balau HttpClient in HTTP read resources.</entry>
			<entry>New BalauFake library supplying empty injectable macros.</entry>
			<entry>Remove Balau logging dependency in Balau core.</entry>
		</bullets>

		<h2>Other changes</h2>

		<bullets>
			<entry>General tidy up.</entry>
			<entry>Move body code into headers for core library.</entry>
			<entry>Rename internal macros to BALAU_* instead of _Balau*.</entry>
			<entry>Clarify use of split injectable macros for libraries..</entry>
			<entry>Rename BALAU_USER_* macros to CPP_USER_*.</entry>
			<entry>Change license to Apache 2.</entry>
		</bullets>

		<h1>V2020.5.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>blocking queue improvements;</entry>
			<entry>added code coverage compiler flags CMake option;</entry>
			<entry>fixed injector iterate function issue;</entry>
			<entry>Added backports for GCC6.</entry>
		</bullets>

		<h1>V2020.2.2</h1>

		<para>Fixes in this release:</para>

		<bullets>
			<entry>Fix template deduction compilation error for older GCC compilers (v6, v7).</entry>
		</bullets>

		<h1>V2020.2.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>new injector get methods that supply a default value via a supplied function;</entry>
			<entry>injector post-construction and pre-destruction callback registration;</entry>
			<entry>injector static singleton registration (useful for rearchitecting non-DI based code);</entry>
			<entry>custom deleters for unique_ptr and shared_ptr injector bindings;</entry>
			<entry>other miscellaneous injector improvements;</entry>
			<entry>test runner improvements;</entry>
			<entry>error recovery support in the language parsing framework;</entry>
			<entry>new utility functions (Containers::contains, Strings::simplify);</entry>
			<entry>new App utility functions (getUserApplicationDataDirectory, getGlobalApplicationDataDirectory, getUserApplicationConfigDirectory, getGlobalApplicationConfigDirectory, getApplicationRuntimeDataDirectory);</entry>
			<entry>dependency graph improvements;</entry>
			<entry>improved Balau build options and introduced BalauConfig.hpp options switches header;</entry>
			<entry>separate Balau CMake default build configuration for use in dependent projects;</entry>
			<entry>changed BALAU_ENABLE_CURL option to default on;</entry>
			<entry>relaxed required Boost version to allow all Boost versions from 1.61.0 onwards (disables HTTP components for Boost &lt; 1.68.0);</entry>
			<entry>Maven based build, test, and assembly using Balau Maven plugins;</entry>
			<entry>new "isA" test assertion;</entry>
			<entry>to-string functions for complex numbers.</entry>
		</bullets>

		<h1>V2019.6.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>XML based test report generation;</entry>
			<entry>test runner now uses SSV style command line options;</entry>
			<entry>command line parser supports multiple final values in SSV mode.</entry>
		</bullets>

		<h1>V2019.5.3</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>corrected compilation with BALAU_ENABLE_CURL option off;</entry>
			<entry>changed BALAU_ENABLE_CURL option to default off;</entry>
			<entry>added build option documentation.</entry>
		</bullets>

		<h1>V2019.5.2</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>HTTP server implementation refinements;</entry>
			<entry>use ASIO strand in HttpSession instances to close sessions;</entry>
			<entry>manual ignore method in unit test framework test group class;</entry>
			<entry>test runner main threads named as current test;</entry>
			<entry>further refinements for GCC 6 support;</entry>
			<entry>CMake options to disable zlib/libzip/curl functionalities;</entry>
			<entry>other miscellaneous refinements.</entry>
		</bullets>

		<para>Pending features not yet in this release:</para>

		<bullets>
			<entry>HTTP client implementation incomplete;</entry>
			<entry>WebSocket application framework and documentation;</entry>
			<entry>WebSocket client;</entry>
			<entry>HTTP client keep alive;</entry>
			<entry>tutorial application example.</entry>
		</bullets>

		<h1>V2019.5.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>modifications to support GCC 6 (for RHEL DTS6).</entry>
		</bullets>

		<h1>V2019.3.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>singleton test runner;</entry>
			<entry>automatic instantiation and registration of test groups;</entry>
			<entry>test runner run methods that parse argc/argv;</entry>
			<entry>selective test running via globbed test name lists.</entry>
		</bullets>

		<h1>V2019.2.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>UTF-8 URL decoding;</entry>
			<entry>added try-catch block for sending internal server error responses on HTTP webapp errors;</entry>
			<entry>moved HTTP server listener onAccept method to header file in order to facilitate application debugging;</entry>
			<entry>added integer fromString functions that accept a numeric base;</entry>
			<entry>support for Fedora 28 / 29;</entry>
			<entry>support for RHEL 7.6 with GCC 7;</entry>
			<entry>documentation corrections and updates.</entry>
		</bullets>

		<h1>V2019.1.1</h1>

		<para>New features in this release:</para>

		<bullets>
			<entry>hierarchical property format and parser;</entry>
			<entry>environment configuration framework integrated with injector;</entry>
			<entry>logging system now uses hierarchical properties configuration format;</entry>
			<entry>client sessions in HTTP server connections;</entry>
			<entry>new redirections HTTP web application;</entry>
			<entry>new toString&lt;Allocator> functions;</entry>
			<entry>optional thread local logger allocator using toString&lt;Allocator> functions;</entry>
			<entry>optional stacktrace support in exceptions;</entry>
			<entry>unified fromString function with std::basic_string_view API;</entry>
			<entry>support for CentOS 7.6 with GCC 7;</entry>
			<entry>draft tutorial added to documentation.</entry>
		</bullets>

		<para>Pending features not yet in this release:</para>

		<bullets>
			<entry>log rotation;</entry>
			<entry>WebSocket application framework and documentation;</entry>
			<entry>WebSocket client;</entry>
			<entry>HTTP client keep alive;</entry>
			<entry>tutorial application example.</entry>
		</bullets>

		<h1>V2018.9.1</h1>

		<para>Initial import into GitHub repository. Main features in the initial import:</para>

		<bullets>
			<entry>dependency injection framework;</entry>
			<entry>logging system;</entry>
			<entry>test framework;</entry>
			<entry>unified to-string functions;</entry>
			<entry>unified from-string functions;</entry>
			<entry>Unicode character and string utilities;</entry>
			<entry>Unified resource identification and resource access;</entry>
			<entry>data structures (ObjectTrie, DependencyGraph, BlockingArrayQueue);</entry>
			<entry>shared memory data structures (SharedMemoryQueue, SharedMemoryObject);</entry>
			<entry>hand written language parser utilities;</entry>
			<entry>HTTP clients and server;</entry>
			<entry>utilities (system, compression, files, hashing, streams, strings, etc.).</entry>
		</bullets>
	</chapter>
</document>
